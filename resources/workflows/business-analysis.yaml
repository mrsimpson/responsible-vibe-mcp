# yaml-language-server: $schema=../state-machine-schema.json
---
name: 'business-analysis'
description: 'Business Capability Modeling workflow that analyzes systems from a pure business perspective. Creates hierarchical business capability maps, service catalogs, and process documentation using industry-standard Business Capability Modeling methodology.'
initial_state: 'document_discovery'

# Enhanced metadata for better discoverability
metadata:
  complexity: 'medium'
  bestFor:
    - 'Business capability modeling'
    - 'Business architecture analysis'
    - 'Business service cataloging'
    - 'Business process documentation'
  useCases:
    - 'Create business capability maps from system documentation'
    - 'Document business services and processes'
    - 'Analyze organizational business functions'
  examples:
    - 'Model business capabilities for legacy system understanding'
    - 'Create business service catalog for domain architects'
    - 'Document business processes and organizational roles'

# States with default instructions and transitions
states:
  document_discovery:
    description: 'Gather business documents and create standardized Business Capability Modeling structure'
    default_instructions: >
      You are in the document discovery phase. Gather documents and create standardized Business Capability Modeling structure.

      **Step 1: Interactive Document Gathering**
      Ask user to identify and provide available documents:
      - Business process documentation
      - Organizational charts
      - System documentation  
      - Existing c4-analysis results
      - Business requirements documents

      **Step 2: Create Standardized Business Capability Modeling Structure**
      Always create this structure:
      - BUSINESS_ANALYSIS.md (main overview)
      - business-domains.md (overview)
      - business-capabilities.md (overview)
      - business-services.md (overview)
      - business-processes.md (overview)
      - business-actors.md (overview)
      - business-analysis/business-domains/ (folder for details)
      - business-analysis/business-capabilities/ (folder for details)
      - business-analysis/business-services/ (folder for details)
      - business-analysis/business-processes/ (folder for details)
      - business-analysis/business-actors/ (folder for details)

      **Step 3: Create Document Processing Tasks**
      For each gathered document, add task to plan file:
      "- [ ] Summarize [document-name] using structured chapter-by-chapter approach"

      Update plan file with discovery progress and processing tasks.
    transitions:
      - trigger: 'discovery_complete'
        to: 'documents_consolidation'
        additional_instructions: >
          Document discovery is complete! ✅ Now transition to documents consolidation phase.

          Create BUSINESS_ANALYSIS.md with the following template content:
          ```markdown
          # Business Analysis Report

          *This report documents business capabilities using Business Capability Modeling methodology. It provides a hierarchical view of what the business does, how it delivers value, and who performs the work.*

          ## Methodology
          This analysis uses **Business Capability Modeling**, an industry-standard approach for understanding business architecture:

          - **Business Domains**: High-level areas of business activity
          - **Business Capabilities**: What the business does (stable, outcome-focused)
          - **Business Services**: How capabilities are delivered to consumers
          - **Business Processes**: Step-by-step activities that deliver services
          - **Business Actors**: Roles and organizational units that perform the work

          **Hierarchy**: Domain → Capability → Sub-Capability → Service → Process → Actor

          ## Executive Summary
          <!-- High-level business capability overview -->

          ## Business Domains Identified
          <!-- Main business domains discovered -->

          ## Key Business Capabilities
          <!-- Primary capabilities mapped hierarchically -->

          ## Business Services Catalog
          <!-- Services that deliver capabilities -->

          ## Business Architecture Insights
          <!-- Important findings and patterns -->

          ## Recommendations
          <!-- Business capability recommendations -->
          ```

          Create business-services-catalog.md with template:
          ```markdown
          # Business Services Catalog

          ## Overview
          This document provides an overview of business services mapped to capabilities.

          ## Business Domains
          <!-- High-level business domains -->

          ## Business Capabilities by Domain
          <!-- Capabilities organized by domain -->

          ## Service Mappings
          <!-- Services supporting each capability -->
          ```

          Create business-processes-detailed.md with template:
          ```markdown
          # Business Processes Detailed

          ## Overview
          This document details business processes for each capability.

          ## Process Overview by Capability
          <!-- Process summaries for each capability -->

          ## Process Flow Diagrams
          <!-- Detailed process flows -->

          ## Process Actors and Responsibilities
          <!-- Key roles in each process -->
          ```

          Create business-functions-mapping.md with template:
          ```markdown
          # Business Functions Mapping

          ## Overview
          This document maps organizational functions to business capabilities.

          ## Organizational Structure
          <!-- High-level org structure -->

          ## Function-Capability Mappings
          <!-- Which functions support which capabilities -->

          ## Roles and Responsibilities
          <!-- Key roles and their responsibilities -->
          ```

          Create technical-business-mapping.md with template:
          ```markdown
          # Technical-Business Mapping

          ## Overview
          This document maps technical components to business capabilities.

          ## Technical Architecture Overview
          <!-- High-level technical architecture -->

          ## Component-Capability Mappings
          <!-- Which technical components support which capabilities -->

          ## Business Value Assessments
          <!-- Business value of each technical component -->
          ```

          Begin systematic document processing using structured summarization technique.
          Mark completed discovery tasks in plan file.
        transition_reason: 'Documents gathered and Business Capability Modeling structure created, ready for consolidation'

  documents_consolidation:
    description: 'Process and consolidate gathered documents using structured summarization'
    default_instructions: >
      You are in the documents consolidation phase. Process each document systematically using structured summarization.

      **Step 1: Review Summarization Tasks**
      Check plan file for document processing tasks created in discovery phase.
      Work through each task systematically.

      **Step 2: Apply Structured Summarization Technique**
      For each document, use this approach:
      "Create a structured summary based exclusively on the source document information. 
      Examine the chapters and hierarchy levels systematically, and summarize them 
      level-by-level into [document-name]-processed.md"

      **Process:**
      1. Read document chapter by chapter
      2. Maintain original hierarchical structure
      3. Condense content while preserving key information
      4. Create [document-name]-processed.md file
      5. Mark task complete in plan file

      **Step 3: Categorize Processed Content**
      As you process documents, start categorizing content into Business Capability Modeling components:
      - Business domain information → business-domains/
      - Business capability information → business-capabilities/
      - Business services information → business-services/
      - Process descriptions → business-processes/
      - Organizational/role info → business-actors/

      **Step 4: Populate Business Capability Modeling Structure**
      Place processed content into appropriate Business Capability Modeling folders and update overview files.

      **Step 5: Ask User for Priorities**
      After processing all documents, ask user:
      "Which business areas or capabilities should we focus on first for the business architecture analysis?"

      Update plan file with consolidation progress and mark completed tasks.
    transitions:
      - trigger: 'consolidation_complete'
        to: 'capability_identification'
        additional_instructions: >
          Documents consolidation is complete! ✅ Now transition to capability identification.

          Begin analyzing processed documents to identify business capabilities and domains.
          Mark completed consolidation tasks in plan file.
        transition_reason: 'Document processing complete, ready for capability analysis'

  capability_identification:
    description: 'Identify business capabilities from processed documents'
    default_instructions: >
      You are in the capability identification phase. Analyze processed documents to identify business capabilities.

      **Step 1: Analyze Processed Documents**
      Review all [document-name]-processed.md files from consolidation phase.
      Look for:
      - Business functions mentioned
      - Activities and processes described
      - Services or offerings referenced
      - Organizational responsibilities
      - System functionalities with business purpose

      **Step 2: Extract Potential Capabilities**
      From document analysis, create initial list of business capabilities.
      Group similar activities and functions together.
      Use Business Capability Modeling naming: [Verb] + [Business Object] (e.g., "Manage Customers", "Process Orders")

      **Step 3: Identify Business Domains**
      Group capabilities into logical business domains:
      - Customer-related capabilities → Customer Management
      - Order-related capabilities → Order Management  
      - Financial capabilities → Financial Management
      - etc.

      **Step 4: Present Findings to User**
      Show user the identified capabilities and domains:
      "Based on the documents, I identified these business domains and capabilities:
      [Present structured list]

      Do these align with your understanding? 
      Are there any capabilities missing or incorrectly categorized?"

      **Step 5: Refine with User Input**
      Adjust the capability model based on user feedback.
      Document final capability list in business-services-catalog.md.

      Focus on document-driven discovery first, then validate with user knowledge.
    transitions:
      - trigger: 'capabilities_identified'
        to: 'capability_decomposition'
        additional_instructions: >
          Capability identification is complete! ✅ Now transition to capability decomposition.

          For each identified capability, add decomposition tasks to plan file:
          "- [ ] Decompose [capability-name] into sub-capabilities using document analysis"

          Begin systematic decomposition of capabilities one at a time.
          Mark completed identification tasks in plan file.
        transition_reason: 'Business capabilities identified, ready for detailed decomposition'

  capability_decomposition:
    description: 'Break down business capabilities into detailed sub-capabilities using document analysis'
    default_instructions: >
      You are in the capability decomposition phase. Analyze documents to identify sub-capabilities, then validate with user.

      **Step 1: Select Next Capability**
      From plan file decomposition tasks, select the next capability to decompose.

      **Step 2: Analyze Documents for Sub-capabilities**
      Review processed documents for the selected capability:
      - Look for detailed activities mentioned within this capability
      - Identify specific processes or functions described
      - Find decision points and workflow steps
      - Note different outcomes or deliverables mentioned

      **Step 3: Extract Potential Sub-capabilities**
      From document analysis, create initial list of sub-capabilities.
      Use Business Capability Modeling naming: [Verb] + [Business Object] 
      Example: For "Customer Management" → "Verify Customer Identity", "Setup Customer Account", "Maintain Customer Data"

      **Step 4: Present Findings to User**
      Show user the identified sub-capabilities:
      "Based on the documents, I identified these sub-capabilities for [capability]:
      [Present structured list]

      Do these sub-capabilities accurately reflect [capability]?
      Are any activities missing or incorrectly categorized?"

      **Step 5: Refine with User Input**
      Adjust the sub-capability model based on user feedback.
      Document refined decomposition in business-services-catalog/ detail folder.
      Mark capability as complete and ask: "Ready for the next capability?"

      Focus on ONE capability per session using document-driven discovery.
    transitions:
      - trigger: 'decomposition_complete'
        to: 'service_mapping'
        additional_instructions: >
          Capability decomposition is complete! ✅ Now transition to service mapping.

          For each capability (and sub-capabilities), add service mapping tasks to plan file:
          "- [ ] Map business services for [capability-name] using document analysis"

          Begin systematic service mapping one capability at a time.
          Mark completed decomposition tasks in plan file.
        transition_reason: 'Capability decomposition complete, ready for service mapping'

  service_mapping:
    description: 'Map business services to capabilities using systematic task-based approach'
    default_instructions: >
      You are in the service mapping phase. Create service mapping tasks for systematic processing.

      **Step 1: Select Next Service Mapping Task**
      From plan file service mapping tasks, select the next capability to process.

      **Step 2: Analyze Documents for Services**
      Review processed documents for the capability:
      - Look for services, APIs, or interfaces mentioned
      - Identify service consumers and providers
      - Note service interactions and dependencies
      - Find service level agreements or requirements

      **Step 3: Extract Services**
      Create initial service list from document analysis.
      Document service characteristics:
      - Service name and purpose
      - Service consumers (who uses it)
      - Service providers (who delivers it)
      - Service interfaces and protocols

      **Step 4: Present to User**
      Show identified services and ask for validation:
      "Based on documents, I identified these services for [capability]:
      [Present service list]

      Do these services accurately support [capability]?
      Are any services missing or incorrectly mapped?"

      **Step 5: Refine and Document**
      Update business-services-catalog.md and detail folder.
      Mark task complete in plan file.

      Process one service mapping task at a time.
    transitions:
      - trigger: 'service_mapping_complete'
        to: 'process_analysis'
        additional_instructions: >
          Service mapping is complete! ✅ Now transition to process analysis.

          For each capability, add process analysis tasks to plan file:
          "- [ ] Analyze business processes for [capability-name] using document analysis"

          Begin systematic process analysis one capability at a time.
          Mark completed service mapping tasks in plan file.
        transition_reason: 'Service mapping complete, ready for process analysis'

  process_analysis:
    description: 'Analyze business processes using systematic task-based approach'
    default_instructions: >
      You are in the process analysis phase. Create process analysis tasks for systematic processing.

      **Step 1: Select Next Process Analysis Task**
      From plan file process analysis tasks, select the next capability to process.

      **Step 2: Analyze Documents for Process Information**
      Review processed documents for process information:
      - Look for process steps, workflows, decision points
      - Identify process actors, inputs, outputs
      - Note process triggers and outcomes
      - Find process rules and constraints

      **Step 3: Extract Processes**
      Create process flows from document analysis.
      Document process characteristics:
      - Process name and purpose
      - Process steps and sequence
      - Decision points and branches
      - Process actors and responsibilities
      - Inputs, outputs, and deliverables

      **Step 4: Present to User**
      Show identified processes and ask for validation:
      "Based on documents, I identified these processes for [capability]:
      [Present process flows]

      Do these processes accurately reflect how [capability] works?
      Are any process steps missing or incorrectly sequenced?"

      **Step 5: Refine and Document**
      Update business-processes-detailed.md and detail folder.
      Mark task complete in plan file.

      Process one capability's processes at a time.
    transitions:
      - trigger: 'process_analysis_complete'
        to: 'actor_analysis'
        additional_instructions: >
          Process analysis is complete! ✅ Now transition to actor analysis.

          Create business-actors.md with template:
          ```markdown
          # Business Actors

          ## Overview
          This document maps business actors (roles and organizational units) to capabilities using Business Capability Modeling methodology.

          ## Actor-Capability Mappings
          <!-- For each capability, document:
          - Primary Owner: Who is accountable for capability outcomes
          - Performing Roles: Which roles actually execute the capability
          - Supporting Units: Which organizational units support the capability
          - Decision Authority: Who has authority to change/approve within this capability -->

          ## Role Definitions
          <!-- Detailed definitions of key business roles -->

          ## Organizational Units
          <!-- Key organizational units and their responsibilities -->
          ```

          For each capability, add actor analysis tasks to plan file:
          "- [ ] Analyze business actors for [capability-name] using document analysis"

          Begin systematic actor analysis one capability at a time.
          Mark completed process analysis tasks in plan file.
        transition_reason: 'Process analysis complete, ready for actor analysis'

  actor_analysis:
    description: 'Map business actors (roles and organizational units) to capabilities using systematic task-based approach'
    default_instructions: >
      You are in the actor analysis phase. Identify WHO performs each capability using Business Capability Modeling approach.

      **Step 1: Select Next Capability for Actor Analysis**
      From plan file, select the next capability to analyze for business actors.

      **Step 2: Analyze Documents for Business Actors**
      Review processed documents to identify:
      - **Business Roles**: Specific job roles (Customer Service Rep, Account Manager, etc.)
      - **Organizational Units**: Teams/departments (Sales Team, Finance Department, etc.)
      - **Decision-making Authority**: Who makes decisions for this capability
      - **Accountability**: Who is responsible for capability outcomes

      **Step 3: Map Actors to Capabilities**
      For the selected capability, identify:
      - **Primary Owner**: Who is accountable for capability outcomes
      - **Performing Roles**: Which roles actually execute the capability
      - **Supporting Units**: Which organizational units support the capability
      - **Decision Authority**: Who has authority to change/approve within this capability

      **Step 4: Create Actor Analysis Document**
      Document the actor mappings in business-actors.md:
      - **Primary Owner**: Who is accountable for capability outcomes
      - **Performing Roles**: Which roles actually execute the capability
      - **Supporting Units**: Which organizational units support the capability
      - **Decision Authority**: Who has authority to change/approve within this capability

      Then present to user for validation:
      "I documented the business actors for [capability]. Please review the actor mappings - do they accurately reflect WHO performs this capability?"

      **Step 5: Refine and Document**
      Update business-actors.md with capability-actor mappings.
      Mark task complete in plan file.

      Focus on capability ownership and role accountability, not just organizational structure.

      Process one capability's functions at a time.
    transitions:
      - trigger: 'actor_analysis_complete'
        to: 'documentation'
        additional_instructions: >
          Function mapping is complete! ✅ Now transition to documentation phase.

          Ask user about diagram format preference:
          "How would you like diagrams formatted in the final documentation?
          - ASCII diagrams (text-based, simple)
          - Mermaid diagrams (code-based, rich formatting)
          - PlantUML diagrams (UML standard, detailed)"

          Begin finalizing business capability analysis deliverables.
          Mark completed function mapping tasks in plan file.
        transition_reason: 'Actor analysis complete, ready for documentation finalization'

  documentation:
    description: 'Define diagram formats and finalize business analysis deliverables'
    default_instructions: >
      You are in the documentation phase. Finalize deliverables using user's diagram format preference.

      **Step 1: Review All Analysis Results**
      Review completed analysis across all Business Capability Modeling components:
      - business-domains.md and detail folder
      - business-capabilities.md and detail folder
      - business-services.md and detail folder
      - business-processes.md and detail folder
      - business-actors.md and detail folder

      **Step 2: Create Final Deliverables**
      Using the user's chosen diagram format (ASCII/Mermaid/PlantUML):
      - Create business capability maps
      - Generate process flow diagrams
      - Build organizational function charts
      - Develop technical-business alignment diagrams

      **Step 3: Update Executive Summary**
      Update BUSINESS_ANALYSIS.md with:
      - Executive summary of findings
      - Key business capabilities identified
      - Business architecture insights
      - Technical-business alignment summary
      - Recommendations for business domain architects

      **Step 4: Final Validation**
      Present final deliverables to user:
      "Here are the completed business analysis deliverables:
      [Present overview of all documents and diagrams]

      Do these deliverables meet your needs for business domain architects?
      Any final adjustments needed?"

      **Step 5: Finalize Documentation**
      Make final refinements based on user feedback.
      Ensure all documentation is business-friendly and accessible.

      Focus on business-friendly formats that serve the target audience.
    transitions:
      - trigger: 'documentation_complete'
        to: 'analysis_complete'
        additional_instructions: >
          Business analysis documentation is complete! ✅ 

          All deliverables are ready:
          - Business capability maps
          - Process flow diagrams  
          - Organizational function mappings
          - Technical-business alignment documentation
          - Executive summary for business domain architects

          The business analysis provides comprehensive business architecture understanding.
        transition_reason: 'Business analysis complete'

  analysis_complete:
    description: 'Business analysis complete'
    default_instructions: >
      Business analysis is complete! The system has been thoroughly analyzed using Business Capability Modeling methodology.

      Final deliverables:
      - Comprehensive business architecture documentation (Business Capability Modeling-based)
      - BUSINESS_ANALYSIS.md with complete analysis findings
      - Business capability maps and process flows
      - Technical-business alignment documentation
      - Business-friendly documentation for domain architects

      The analysis provides a solid foundation for business architecture decisions and technical-business alignment.
    transitions:
      - trigger: 'analysis_complete'
        to: 'analysis_complete'
        instructions: >
          Analysis is complete! The business architecture is now well-documented and understood.
          Use the comprehensive documentation for business architecture decisions and planning.
        transition_reason: 'Analysis complete, ready for business architecture work'
